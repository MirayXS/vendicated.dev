---
import { setTheme, type Theme } from "scripts/themeRuntime";
import DarkIcon from "./DarkIcon.astro";
import SystemIcon from "./SystemIcon.astro";
import LightIcon from "./LightIcon.astro";

const options = [
    { label: "Light theme", value: "light", icon: LightIcon },
    {
        label: "Follow system theme",
        value: "system",
        icon: SystemIcon,
    },
    { label: "Dark theme", value: "dark", icon: DarkIcon },
] as const;
---

<div aria-label="Change Theme" id="theme-toggle" class="focus-ring-parent">
    {
        options.map(option => (
            <label title={option.label}>
                <option.icon class="theme-toggle-icon" />
                <input
                    type="radio"
                    name="theme"
                    value={option.value}
                    id={`theme-${option.value}`}
                    checked={option.value === "system"}
                    aria-label={option.label}
                />
            </label>
        ))
    }
    <script is:inline>
        let theme = localStorage.getItem("theme");
        if (!["light", "dark", "system"].includes(theme)) {
            theme = "system";
        }
        document.querySelector(`#theme-${theme}`).checked = true;

        const toggle = document.getElementById("theme-toggle");
        toggle.addEventListener("change", e => {
            const target = e.target;
            if (
                target.name === "theme" &&
                ["light", "dark", "system"].includes(target.value)
            ) {
                globalThis.setTheme(target.value);
            }
        });
    </script>
</div>

<style>
    div {
        display: flex;
        align-items: center;
    }

    label {
        width: 1.5em;
        height: 1.5em;
        padding: 0.4em;

        position: relative;
        display: block;
        background: var(--surface2);
        box-shadow: inset 0px 0px 1px 0px var(--color);

        &:has(input:checked) {
            background: var(--surface);
        }

        .theme-toggle-icon {
            transition:
                200ms scale,
                200ms color;
        }

        &:hover .theme-toggle-icon {
            scale: 1.1;
            color: var(--accent);
        }
    }

    input {
        position: absolute;
        opacity: 0;
    }
</style>
