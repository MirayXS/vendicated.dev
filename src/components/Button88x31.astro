---
import type { ImageMetadata } from "astro";

export interface Props {
    name: string;
    url?: string;
    title?: string;
}

const { name, url, title = name } = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
    "../../public/assets/88x31/*.{jpeg,jpg,png,webp,avif,gif}"
);
const img = Object.keys(images).find(path => path.includes(`/${name}.`));
if (!img) throw new Error(`88x31 for ${name} not found`);

const src = (await images[img]()).default.src;
---

<a href={url ?? src} title={title} rel="nofollow" class="focus-ring">
    <img src={src} alt="" width="88" height="31" decoding="async" />
</a>

<style lang="scss">
    img {
        height: 31px;
        width: 88px;
        image-rendering: pixelated;

        transition: 0.2s scale;
    }

    a {
        height: 31px;
        width: 88px;

        text-decoration: none;

        &:is(:hover) img {
            scale: 1.05;
        }
    }
</style>
